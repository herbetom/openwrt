From 228fcb0738a9e582a15666e717bb2fc5078c694c Mon Sep 17 00:00:00 2001
From: David Bauer <mail@david-bauer.net>
Date: Thu, 4 Jan 2024 12:44:06 +0100
Subject: [PATCH] mtd: spi-nor: add property to unlock entire chip

Add a new device-tree porperty "swp-disable" which can be added to
spi-nor OF-nodes to indicate the whole flash-chip should be unlocked.

This avoids changing the default behavior of all SPI-NOR chips and helps
to indicate devices which require the old kernel behavior explicitly.

Signed-off-by: David Bauer <mail@david-bauer.net>
---
 drivers/mtd/spi-nor/core.c | 2 +++
 1 file changed, 3 insertions(+)

Index: linux-6.1.71/drivers/mtd/spi-nor/core.c
===================================================================
--- linux-6.1.71.orig/drivers/mtd/spi-nor/core.c
+++ linux-6.1.71/drivers/mtd/spi-nor/core.c
@@ -2715,6 +2715,7 @@ static int spi_nor_quad_enable(struct sp
 static int spi_nor_init(struct spi_nor *nor)
 {
 	struct spi_nor_flash_parameter *params = nor->params;
+	struct device_node *np = spi_nor_get_flash_node(nor);
 	int err;
 
 	err = spi_nor_octal_dtr_enable(nor, true);
@@ -2739,10 +2740,14 @@ static int spi_nor_init(struct spi_nor *
 	 * protection bits are volatile. The latter is indicated by
 	 * SNOR_F_SWP_IS_VOLATILE.
 	 */
+	printk("checking for unconditional unlock");
 	if (IS_ENABLED(CONFIG_MTD_SPI_NOR_SWP_DISABLE) ||
+	    of_property_read_bool(np, "swp-disable") ||
 	    (IS_ENABLED(CONFIG_MTD_SPI_NOR_SWP_DISABLE_ON_VOLATILE) &&
-	     nor->flags & SNOR_F_SWP_IS_VOLATILE))
+	     nor->flags & SNOR_F_SWP_IS_VOLATILE)) {
+		printk("unconditional unlocking");
 		spi_nor_try_unlock_all(nor);
+	}
 
 	if (nor->addr_nbytes == 4 &&
 	    nor->read_proto != SNOR_PROTO_8_8_8_DTR &&
